#packopt name "CoolNeko"
#packopt version "version.txt"

#module
	#uselib "shell32"
	#func  global SHFileOperation "SHFileOperationA" int
	#deffunc deletefolder str _dir
	sdim pFrom, 260
	pFrom = _dir

	dim SHFILEOPSTRUCT, 8
	SHFILEOPSTRUCT.0 = hWnd
	SHFILEOPSTRUCT.1 = 0x0003 //FO_DELETE
	SHFILEOPSTRUCT.2 = varptr( pFrom )
	SHFILEOPSTRUCT.3 = 0
	SHFILEOPSTRUCT.4 = 0x0114 // FOF_SIMPLEPROGRESS | FOF_NOCONFIRMATION

	SHFileOperation varptr( SHFILEOPSTRUCT )
	return stat
#global

// CoolNeko Script
	#uselib "dwmapi.dll"
	#func DwmSetWindowAttribute "DwmSetWindowAttribute" sptr,sptr,var,sptr
	#define DWMWA_USE_IMMERSIVE_DARK_MODE 20

	value = 1
	DwmSetWindowAttribute hwnd,DWMWA_USE_IMMERSIVE_DARK_MODE,value,4

/* ---------------------------------------------------------
	include
	--------------------------------------------------------- */
	#include "mod_WebView2.hsp"

	/* ---------------------------------------------------------
		define
	  --------------------------------------------------------- */
	#define global DEF_URL "https://www.google.co.jp/"
	
	#define global WM_SETFONT  0x0030
	
	#define global TCM_GETITEMCOUNT  0x1304
	#define global TCM_GETITEMA		0x1305
	#define global TCM_INSERTITEMA	0x1307
	#define global TCM_DELETEITEM	 0x1308
	#define global TCM_GETCURSEL	  0x130b
	#define global TCM_SETCURSEL	  0x130c
	#define global TCM_HITTEST		 0x130d
	#define global TCM_SETITEMW		0x133d
	#define global TCM_INSERTITEMW	0x133e
	
	#define global WV2Env_CreateWV2Ctrl			  3
	#define global WV2Ctrl_put_IsVisible			 4
	#define global WV2Ctrl_put_Bounds				 6
	#define global WV2Ctrl_GetParent				 21
	#define global WV2Ctrl_Close					  24
	#define global WV2Ctrl_get_CoreWebView2		25
	#define global WV2_get_Source					  4
	#define global WV2_Navigate						 5
	#define global WV2_add_NavigationCompleted	15
	#define global WV2_del_NavigationCompleted	16
	#define global WV2_ExecuteScript				 29
	#define global WV2_CapturePreview				30
	#define global WV2_Reload						  31
	#define global WV2_get_CanGoBack				 38
	#define global WV2_get_CanGoForward			 39
	#define global WV2_get_GoBack					 40
	#define global WV2_get_GoForward				 41
	#define global WV2_add_NewWindowRequested	 44
	#define global WV2_del_NewWindowRequested	 45
	#define global WV2_add_DocumentTitleChanged  46
	#define global WV2_del_DocumentTitleChanged  47
	#define global WV2_get_DocumentTitle			48
	#define global WV2_add_FullScrChanged		  52
	#define global WV2_del_FullScrChanged		  53
	#define global WV2_GetFullScreen				 54
	#define global WV2_OpenTaskManagerWindow	  79
	#define global WV2_PrintToPdf					 80
	#define global WV2_IsDownloadDialogOpen		90
	#define global WV2_OpenDownloadDialog		  91
	#define global WV2_CloseDownloadDialog		 92
	#define global WV2NewWnd_get_Uri				  3
	#define global WV2NewWnd_put_NewWindow		  4
	#define global WV2NewWnd_put_Handled			 6
	#define global WV2NewWnd_GetDeferral			 9
	#define global WV2Deferral_Complete			  3
	
	/* ---------------------------------------------------------
		ExecuteScript screen 2
	  --------------------------------------------------------- */
		screen 2, ginfo_dispx, ginfo_dispy, 2, , , 320, 240
		title "CoolNeko" : hWnd2 = hwnd : 	font "Consolas", 11 : objmode 2
		sdim bufExec, 1024 : sdim bufRes, 1024
		pos 0, 0 : objsize ginfo_winx, 20
		button gosub "ExecuteScript", *BTN_EXEC : hBtnExec = objinfo_hwnd(stat)
		p1 = (ginfo_winy - 20) / 2 : pos 0, 20
		mesbox bufExec, ginfo_winx, p1 : hMbExec = objinfo_hwnd(stat)
		pos 0, p1 + 20
		mesbox bufRes, ginfo_winx, p1 : hMbRes = objinfo_hwnd(stat)
		oncmd gosub *WM2_SIZE,  0x0005
		oncmd gosub *WM2_CLOSE, 0x0010
	
	/* ---------------------------------------------------------
		Main Window
	  --------------------------------------------------------- */
		WebView2_InitWnd 0
		hWnd0 = hwnd : title "CoolNeko"
		sendmsg hwnd, $112, $F030
		font "ÉÅÉCÉäÉI", 11 : mref bmscr, 67 : hFont = bmscr(38)
		dim wndInfo, 7
	
		hMenu = CreateMenu()
		menuBuf(0) = "Back", "Forward", "Reload", "Navigate"
		menuBuf(4) = "New Tab", "Del Tab", "Execute", "Capture"
		menuBuf(8) = "PrintPDF", "DownLoad", "Task"
		repeat length(menuBuf)
			InsertMenu hMenu, -1, 0x400, 0x8000 + cnt, menuBuf(cnt)
		loop
		dim mi, 12 : mi = 48, 1 : mi(3) = 3
		SetMenu hWnd0, hMenu
	
		ldim lbCmd, length(menuBuf)
		lbCmd(0) = *CMD_BACK, *CMD_FORWARD, *CMD_RELOAD, *CMD_NAVIGATE
		lbCmd(4) = *CMD_NEW_TAB, *CMD_DEL_TAB, *CMD_EXECUTE, *CMD_CAPTURE
		lbCmd(8) = *CMD_PRINTPDF, *CMD_DOWNLOAD, *CMD_TASKMANAGER
	
		CreateWindowExA 0, "edit", 0, 0x56000080, 0, 0, 0, 0, hWnd0, 0, hinstance, 0
		hEditUrl = stat : sendmsg hEditUrl, WM_SETFONT, hFont, 1
		bufTmp = DEF_URL : SetWindowTextA hEditUrl, varptr(bufTmp)
	
		dim rc, 4 : dim tci, 7 : bAdd = 0 : bDel = 0
		CreateWindowExA 0, "SysTabControl32", 0, 0x56008468, 0, 0, 0, 0, hWnd0, 0, hinstance, 0
		hTab = stat : sendmsg hTab, WM_SETFONT, hFont, 1
		p1 = 0 << 16 : p1 |= 160 : sendmsg hTab, 0x1329, 0, p1
	
		pEnv = WebView2_CreateEnv()
		if ( pEnv == 0 ){ dialog "err WebView2_CreateEnv" : end }
		curCtrl = 0 : curView = 0
	
		oncmd gosub *EVENT_TITLE,	 0x9000
		oncmd gosub *EVENT_COMPLETE, 0x9001
		oncmd gosub *EVENT_FULLSCR,  0x9002
		oncmd gosub *EVENT_NEWWND,	0x9003
		oncmd gosub *EVENT_NEWWND2,  0x9004
		oncmd gosub *EVENT_PRINT,	 0x9005
	
		oncmd gosub *WM_SIZE,		  0x0005
		oncmd gosub *WM_CLOSE,		 0x0010
		oncmd gosub *WM_NOTIFY,		0x004E
		oncmd gosub *WM_COMMAND,	  0x0111
	
		gosub *TAB_ADD
		stop
	
	/* ---------------------------------------------------------
		Label Tab
	  --------------------------------------------------------- */
	*MENU_UPDATE
		mi(1) = 1
		if ( CCall2(dpCtrl(1), WV2_get_CanGoBack, 1, varptr(p1)) == 0 ){
			if ( p1 ){ mi(3) = 0 }
			else { mi(3) = 3 }
		}
		else { mi(3) = 3 }
		SetMenuItemInfo hMenu, 0, 1, varptr(mi)
		if ( CCall2(dpCtrl(1), WV2_get_CanGoForward, 1, varptr(p1)) == 0 ){
			if ( p1 ){ mi(3) = 0 }
			else { mi(3) = 3 }
		}
		else { mi(3) = 3 }
		SetMenuItemInfo hMenu, 1, 1, varptr(mi)
		DrawMenuBar hWnd0
		return
	
	*TAB_GETINFO
		sendmsg hTab, TCM_GETCURSEL, 0, 0 : iTab = stat
		gosub *TAB_GETINFO2
		return
	
	*TAB_GETINFO2
		pTabInfo = 0
		if ( iTab == -1 ){ return }
		tci(0) = 8 : sendmsg hTab, TCM_GETITEMA, iTab, varptr(tci)
		if ( stat == 0 ){ return }
		pTabInfo = tci(6)
		dupptr dpCtrl, WV2_DATA_SIZE * 28 + pTabInfo, 8, 4
		return
	
	*TAB_SELECT
		gosub *TAB_GETINFO
		if ( pTabInfo == 0 ){ return }
		pView = -1 : gosub *TAB_UPDATE
		gosub *WM_SIZE
		ret = CCall2(dpCtrl, WV2Ctrl_put_IsVisible, 1, 1)
		return
	
	*TAB_UPDATE
		gosub *TAB_GETINFO
		if ( pTabInfo == 0 ){ return }
		gosub *MENU_UPDATE
		if ( CCall2(dpCtrl(1), WV2_get_DocumentTitle, 1, varptr(p1)) == 0 ){
			if ( pView == -1 || pView == dpCtrl(1) ){ SetWindowTextW hWnd0, p1 }
			tci(0) = 1 : tci(3) = p1
			sendmsg hTab, TCM_SETITEMW, iTab, varptr(tci)
			CoTaskMemFree p1

			sdim pszText:sendmsg hWnd0, $D, 64, varptr(pszText)
			sendmsg hWnd0, $C, , pszText+" - CoolNeko"
		}
		if ( pView == -1 || pView == dpCtrl(1) ){
			if ( CCall2(dpCtrl(1), WV2_get_Source, 1, varptr(p1)) == 0 ){
				SetWindowTextW hEditUrl, p1
				CoTaskMemFree p1
			}
		}
		return
	
	*TAB_ADD
		if ( bAdd ){ return }
		bAdd = 1
		gosub *TAB_ADD2
		gosub *EVENT_SET
		gosub *TAB_SELECT
		bufTmp = DEF_URL
		SetWindowTextA hEditUrl, varptr(bufTmp)
		gosub *CMD_NAVIGATE
		bAdd = 0
		return
	
	*TAB_ADD2
		gosub *TAB_GETINFO
		if ( pTabInfo ){
			ret = CCall2(dpCtrl, WV2Ctrl_put_IsVisible, 1, 0)
		}
		sendmsg hTab, TCM_GETITEMCOUNT, 0, 0 : iTab = stat
		tci(0) = 9 : tci(6) = 0
		bufTmp = "Loading..." : tci(3) = varptr(bufTmp)
		sendmsg hTab, TCM_INSERTITEMA, iTab, varptr(tci)
		sendmsg hTab, TCM_SETCURSEL, iTab, 0
		curCtrl = WebView2_CreateCtrl(pEnv, hWnd0)
		curView = WebView2_GetView(curCtrl)
		if ( curCtrl == 0 || curView == 0 ){
			gosub *TAB_DEL
			return
		}
		return
	
	*TAB_DEL
		sendmsg hTab, TCM_GETITEMCOUNT, 0, 0
		if ( stat <= 1 ){ return }
		if ( bDel ){ return }
		bDel = 1
		gosub *TAB_GETINFO2
		if ( pTabInfo == 0 ){ return }
		ret = CCall2(dpCtrl(0), WV2Ctrl_Close, 0)
		WebView2_Release dpCtrl(1)
		WebView2_Release dpCtrl(0)
		HeapFree GetProcessHeap(), 0, pTabInfo
		sendmsg hTab, TCM_DELETEITEM, iTab, 0
		if ( iTab ){ iTab-- }
		sendmsg hTab, TCM_SETCURSEL, iTab, 0
		gosub *TAB_SELECT
		bDel = 0
		return
	
	/* ---------------------------------------------------------
		Label Event
	  --------------------------------------------------------- */
	*EVENT_TITLE
		pView = wparam : gosub *TAB_UPDATE
		return
	
	*EVENT_COMPLETE
		pView = wparam : gosub *TAB_UPDATE
		return
	
	*EVENT_FULLSCR
		gosub *TAB_GETINFO
		if ( pTabInfo == 0 ){ return }
		if ( dpCtrl(1) != wparam ){ return }
		if ( CCall2(dpCtrl(1), WV2_GetFullScreen, 1, varptr(p1)) ){ return }
		if ( p1 ){
			ShowWindow hEditUrl, 0
			ShowWindow hTab, 0
			wndInfo(0) = GetWindowLong(hWnd0, -20)
			wndInfo(1) = GetWindowLong(hWnd0, -16)
			wndInfo(2) = GetMenu(hWnd0)
			SetMenu hWnd0, 0
			if ( WebView2_GetWndRect(hWnd0, rc) == 0 ){ return }
			wndInfo(3) = rc(0), rc(1), rc(2), rc(3)
			SetWindowLong hWnd0, -20, 0
			SetWindowLong hWnd0, -16, wndInfo(1) & 0xff000000
			if ( WebView2_GetMonitorRect(hWnd0, rc) == 0 ){ return }
			SetWindowPos hWnd0, -1, rc(0), rc(1), rc(2), rc(3), 0x220
		}
		else {
			ShowWindow hEditUrl, 5
			ShowWindow hTab, 5
			SetWindowLong hWnd0, -20, wndInfo(0)
			SetWindowLong hWnd0, -16, wndInfo(1)
			if ( wndInfo(2) ){ SetMenu hWnd0, wndInfo(2) }
			if ( wndInfo(0) & 0x8 ){ p1 = -1 } else { p1 = -2 }
			SetWindowPos hWnd0, p1, wndInfo(3), wndInfo(4), wndInfo(5), wndInfo(6), 0x220
			ShowWindow hWnd0, 1
		}
		return
	
	*EVENT_PRINT
		dialog strf("PDF isSuccessful %d", lparam)
		mi(1) = 1 : mi(3) = 0
		SetMenuItemInfo hMenu, 8, 1, varptr(mi)
		DrawMenuBar hWnd0
		bPDF = 0
		return
	
	*EVENT_NEWWND
		if ( lparam == 0 || bAdd != 0 ){ return }
		bAdd = 1
		pNewWnd = lparam
		if ( CCall2(pNewWnd, WV2NewWnd_GetDeferral, 1, varptr(pDef)) == 0 ){
			PostMessage hWnd0, 0x9004, 0, 0
			bAdd = 1
		}
		return
	
	*EVENT_NEWWND2
		if ( CCall2(pNewWnd, WV2NewWnd_put_Handled, 1, 1) == 0 ){
			if ( CCall2(pNewWnd, WV2NewWnd_get_Uri, 1, varptr(p1)) == 0 ){
				gosub *TAB_ADD2
				ret = CCall2(pNewWnd, WV2NewWnd_put_NewWindow, 1, curView)
				gosub *EVENT_SET
				gosub *TAB_SELECT
			}
		}
		ret = CCall2(pDef, WV2Deferral_Complete, 0)
		WebView2_Release pDef
		bAdd = 0
		return
	
	*EVENT_SET
		pTabInfo = 0
		pTabInfo = HeapAlloc(GetProcessHeap(), 8, WV2_DATA_SIZE * 28 + 8)
		if ( pTabInfo == 0 ){ return }
		dupptr dp, pTabInfo, WV2_DATA_SIZE * 4, 4
		WebView2_EventInit WV2_EVENT_TITLECHANGED, hWnd0, 0x9000, dp
		ret = CCall2(curView, WV2_add_DocumentTitleChanged, 2, dp, varptr(dp(6)))
	
		dupptr dp, WV2_DATA_SIZE * 4 + pTabInfo, WV2_DATA_SIZE * 4, 4
		WebView2_EventInit WV2_EVENT_NAVIGATIONCOMPLETED, hWnd0, 0x9001, dp
		ret = CCall2(curView, WV2_add_NavigationCompleted, 2, dp, varptr(dp(6)))
	
		dupptr dp, WV2_DATA_SIZE * 8 + pTabInfo, WV2_DATA_SIZE * 4, 4
		WebView2_EventInit WV2_EVENT_FULLSCREEN, hWnd0, 0x9002, dp
		ret = CCall2(curView, WV2_add_FullScrChanged, 2, dp, varptr(dp(6)))
	
		dupptr dp, WV2_DATA_SIZE * 12 + pTabInfo, WV2_DATA_SIZE * 4, 4
		WebView2_EventInit WV2_EVENT_NEWWINDOW, hWnd0, 0x9003, dp
		ret = CCall2(curView, WV2_add_NewWindowRequested, 2, dp, varptr(dp(6)))
	
		dupptr dpCtrl, WV2_DATA_SIZE * 28 + pTabInfo, 8, 4
		dpCtrl(0) = curCtrl, curView
	
		tci(0) = 8 : tci(6) = pTabInfo
		sendmsg hTab, TCM_SETITEMW, iTab, varptr(tci)
		return
	
	/* ---------------------------------------------------------
		Label Menu
	  --------------------------------------------------------- */
	*CMD_BACK
		gosub *TAB_GETINFO
		if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_get_GoBack, 0) }
		return
	
	*CMD_FORWARD
		gosub *TAB_GETINFO
		if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_get_GoForward, 0) }
		return
	
	*CMD_RELOAD
		gosub *TAB_GETINFO
		if ( pTabInfo ){ ret = CCall2(dpCtrl(1), WV2_Reload, 0) }
		return
	
	*CMD_NAVIGATE
		gosub *TAB_GETINFO
		if ( pTabInfo == 0 ){ return }
		p1 = (GetWindowTextLengthW(hEditUrl) + 1) * 2
		sdim bufTmp, p1
		GetWindowTextW hEditUrl, varptr(bufTmp), p1
		
		//ägí£
		sdim urlTmp
		sendmsg hEditUrl, $D, 64, varptr(urlTmp)
		switch urlTmp
			case "coolneko:task"
				gosub *CMD_TASKMANAGER
				return
				swbreak
			case "coolneko:about"
				dialog "CoolNeko is Open Source Browser\nPowered by WebView2",0,"About CoolNeko"
				return
				swbreak
			default
				ret = CCall2(dpCtrl(1), WV2_Navigate, 1, varptr(bufTmp))
				swbreak
			swend
		return
	
	*CMD_NEW_TAB
		gosub *TAB_ADD
		return
	
	*CMD_DEL_TAB
		gosub *TAB_DEL
		return
	
	*CMD_EXECUTE
		if ( IsWindowVisible(hWnd2) ){
			SetWindowPos hWnd2, 0, 0, 0, 0, 0, 0x83
		}
		else {
			SetWindowPos hWnd2, -1, 0, 0, 0, 0, 0x63
		}
		return
	
	*CMD_CAPTURE
		dialog "png", 17
		if ( stat == 0 ){ return }
		if ( SHCreateStreamOnFileEx(refstr, 0x1002, 0x80, 1, 0, p1) ){ return }
		gosub *TAB_GETINFO
		if ( pTabInfo == 0 ){ return }
		dupptr dp, WV2_DATA_SIZE * 20 + pTabInfo, WV2_DATA_SIZE * 4, 4
		WebView2_EventInit WV2_EVENT_CAPTURE, hWnd0, 0, dp
		ret = CCall2(dpCtrl(1), WV2_CapturePreview, 3, 0, p1, dp)
		WebView2_EventWait dp
		WebView2_Release p1
		return
	
	*CMD_PRINTPDF
		if ( bPDF ){ return }
		dialog "pdf", 17
		if ( stat == 0 ){ return }
		gosub *TAB_GETINFO
		if ( pTabInfo == 0 ){ return }
		bPDF = 1
		mi(1) = 1 : mi(3) = 3
		SetMenuItemInfo hMenu, 8, 1, varptr(mi)
		DrawMenuBar hWnd0
		dupptr dp, WV2_DATA_SIZE * 24 + pTabInfo, WV2_DATA_SIZE * 4, 4
		WebView2_EventInit WV2_EVENT_PRINTTOPDF, hWnd0, 0x9005, dp
		sdim bufTmp, (strlen(refstr) + 1) * 2
		cnvstow bufTmp, refstr
		ret = CCall2(dpCtrl(1), WV2_PrintToPdf, 3, varptr(bufTmp), 0, dp)
		return stat
	
	*CMD_DOWNLOAD
		gosub *TAB_GETINFO
		if ( pTabInfo == 0 ){ return }
		if ( CCall2(dpCtrl(1), WV2_IsDownloadDialogOpen, 1, varptr(p1)) ){ return }
		if ( p1 ){ p1 = WV2_CloseDownloadDialog } else { p1 = WV2_OpenDownloadDialog }
		ret = CCall2(dpCtrl(1), p1, 0)
		return
	
	*CMD_TASKMANAGER
		gosub *TAB_GETINFO
		if ( pTabInfo == 0 ){ return }
		ret = CCall2(dpCtrl(1), WV2_OpenTaskManagerWindow, 0)
		return
	
	/* ---------------------------------------------------------
		Label screen 0
	  --------------------------------------------------------- */
	*WM_SIZE
		GetClientRect hWnd0, varptr(rc)
		if ( IsWindowVisible(hEditUrl) ){
			MoveWindow hEditUrl, 8, 0, rc(2) - 16, 20, 0
			MoveWindow hTab, 0, 20, rc(2), 24, 0
			p1 = 44
		}
		else { p1 = 0 }
		gosub *TAB_GETINFO
		if ( pTabInfo ){
			WebView2_Size dpCtrl(0), 0, p1, rc(2), rc(3)
		}
		return
	
	*WM_CLOSE
		sendmsg hTab, TCM_GETITEMCOUNT, 0, 0
		repeat stat
			iTab = cnt : gosub *TAB_DEL
		loop
		WebView2_Release pEnv
		if ( hMenu ){ DestroyMenu hMenu }
		return
	
	*WM_NOTIFY
		if ( lparam == 0 ){ return }
		dupptr dpHdr, lparam, 12, 4
		if ( dpHdr(0) == hTab ){
			if ( dpHdr(2) == -552 ){
				sendmsg hTab, TCM_GETCURSEL, 0, 0
				if ( stat == -1 ){ return }
				iTab = stat : gosub *TAB_GETINFO2
				if ( pTabInfo == 0 ){ return }
				ret = CCall2(dpCtrl(0), WV2Ctrl_put_IsVisible, 1, 0)
			}
			if ( dpHdr(2) == -551 ){
				gosub *TAB_SELECT
				return
			}
			if ( dpHdr(2) == -5 ){
				dim tchi, 3
				GetCursorPos varptr(tchi)
				ScreenToClient hTab, varptr(tchi)
				sendmsg hTab, TCM_HITTEST, 0, varptr(tchi)
				if ( stat == -1 ){ return }
				iTab = stat : gosub *TAB_DEL
				return
			}
		}
		return
	
	*WM_COMMAND
		if ( lparam == 0 && (wparam >> 16) == 0 ){
			id = wparam & 0xffff
			if ( id < 0x8000 || id >= (0x8000 + length(lbCmd)) ){ return }
			gosub lbCmd(id - 0x8000)
		}
		return
	
	/* ---------------------------------------------------------
		Label screen 2
	  --------------------------------------------------------- */
	*WM2_SIZE
		GetClientRect hWnd2, varptr(rc)
		rc(3) = (rc(3) - 20) / 2
		MoveWindow hBtnExec, 0, 0, rc(2), 20, 1
		MoveWindow hMbExec, 0, 20, rc(2), rc(3), 1
		MoveWindow hMbRes, 0, rc(3) + 20, rc(2), rc(3), 1
		return
	
	*WM2_CLOSE
		SetWindowPos hWnd2, 0, 0, 0, 0, 0, 0x83
		return 0
	
	*BTN_EXEC
		gosub *TAB_GETINFO
		if ( pTabInfo == 0 ){ return }
		EnableWindow hBtnExec, 0
		p1 = (GetWindowTextLengthW(hMbExec) + 1) * 2
		sdim bufTmp, p1
		GetWindowTextW hMbExec, varptr(bufTmp), p1
		dupptr dp, WV2_DATA_SIZE * 16 + pTabInfo, WV2_DATA_SIZE * 4, 4
		WebView2_EventInit WV2_EVENT_EXECUTESCRIPT, 0, 0, dp
		if ( CCall2(dpCtrl(1), WV2_ExecuteScript, 2, varptr(bufTmp), dp) == 0 ){
			WebView2_EventWait dp
			if ( dp(WV2_DATA_WP) == 0 ){
				if ( WebView2_CnvWinStr(dp(WV2_DATA_LP), bufTmp) ){
					SetWindowTextA hMbRes, varptr(bufTmp)
				}
			}
		}
		EnableWindow hBtnExec, 1
		return